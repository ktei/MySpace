//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.296
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.ServiceReference, version 4.0.50826.0
// 
namespace LiteApp.MySpace.Services.Photo {
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Album", Namespace="http://schemas.datacontract.org/2004/07/LiteApp.MySpace.Web.Entities")]
    public partial class Album : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string CoverUriField;
        
        private string CreatedByField;
        
        private string DescriptionField;
        
        private string IdField;
        
        private string NameField;
        
        private int PhotoCountField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CoverUri {
            get {
                return this.CoverUriField;
            }
            set {
                if ((object.ReferenceEquals(this.CoverUriField, value) != true)) {
                    this.CoverUriField = value;
                    this.RaisePropertyChanged("CoverUri");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CreatedBy {
            get {
                return this.CreatedByField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatedByField, value) != true)) {
                    this.CreatedByField = value;
                    this.RaisePropertyChanged("CreatedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PhotoCount {
            get {
                return this.PhotoCountField;
            }
            set {
                if ((this.PhotoCountField.Equals(value) != true)) {
                    this.PhotoCountField = value;
                    this.RaisePropertyChanged("PhotoCount");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="", ConfigurationName="Services.Photo.PhotoService")]
    public interface PhotoService {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:PhotoService/GetAllAlbums", ReplyAction="urn:PhotoService/GetAllAlbumsResponse")]
        System.IAsyncResult BeginGetAllAlbums(System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<LiteApp.MySpace.Services.Photo.Album> EndGetAllAlbums(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:PhotoService/SaveAlbum", ReplyAction="urn:PhotoService/SaveAlbumResponse")]
        System.IAsyncResult BeginSaveAlbum(LiteApp.MySpace.Services.Photo.Album album, System.AsyncCallback callback, object asyncState);
        
        void EndSaveAlbum(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface PhotoServiceChannel : LiteApp.MySpace.Services.Photo.PhotoService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAllAlbumsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAllAlbumsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<LiteApp.MySpace.Services.Photo.Album> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<LiteApp.MySpace.Services.Photo.Album>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PhotoServiceClient : System.ServiceModel.ClientBase<LiteApp.MySpace.Services.Photo.PhotoService>, LiteApp.MySpace.Services.Photo.PhotoService {
        
        private BeginOperationDelegate onBeginGetAllAlbumsDelegate;
        
        private EndOperationDelegate onEndGetAllAlbumsDelegate;
        
        private System.Threading.SendOrPostCallback onGetAllAlbumsCompletedDelegate;
        
        private BeginOperationDelegate onBeginSaveAlbumDelegate;
        
        private EndOperationDelegate onEndSaveAlbumDelegate;
        
        private System.Threading.SendOrPostCallback onSaveAlbumCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public PhotoServiceClient() {
        }
        
        public PhotoServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public PhotoServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PhotoServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PhotoServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                            "ookieContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<GetAllAlbumsCompletedEventArgs> GetAllAlbumsCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> SaveAlbumCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult LiteApp.MySpace.Services.Photo.PhotoService.BeginGetAllAlbums(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAllAlbums(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.Generic.List<LiteApp.MySpace.Services.Photo.Album> LiteApp.MySpace.Services.Photo.PhotoService.EndGetAllAlbums(System.IAsyncResult result) {
            return base.Channel.EndGetAllAlbums(result);
        }
        
        private System.IAsyncResult OnBeginGetAllAlbums(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((LiteApp.MySpace.Services.Photo.PhotoService)(this)).BeginGetAllAlbums(callback, asyncState);
        }
        
        private object[] OnEndGetAllAlbums(System.IAsyncResult result) {
            System.Collections.Generic.List<LiteApp.MySpace.Services.Photo.Album> retVal = ((LiteApp.MySpace.Services.Photo.PhotoService)(this)).EndGetAllAlbums(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAllAlbumsCompleted(object state) {
            if ((this.GetAllAlbumsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAllAlbumsCompleted(this, new GetAllAlbumsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAllAlbumsAsync() {
            this.GetAllAlbumsAsync(null);
        }
        
        public void GetAllAlbumsAsync(object userState) {
            if ((this.onBeginGetAllAlbumsDelegate == null)) {
                this.onBeginGetAllAlbumsDelegate = new BeginOperationDelegate(this.OnBeginGetAllAlbums);
            }
            if ((this.onEndGetAllAlbumsDelegate == null)) {
                this.onEndGetAllAlbumsDelegate = new EndOperationDelegate(this.OnEndGetAllAlbums);
            }
            if ((this.onGetAllAlbumsCompletedDelegate == null)) {
                this.onGetAllAlbumsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAllAlbumsCompleted);
            }
            base.InvokeAsync(this.onBeginGetAllAlbumsDelegate, null, this.onEndGetAllAlbumsDelegate, this.onGetAllAlbumsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult LiteApp.MySpace.Services.Photo.PhotoService.BeginSaveAlbum(LiteApp.MySpace.Services.Photo.Album album, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSaveAlbum(album, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void LiteApp.MySpace.Services.Photo.PhotoService.EndSaveAlbum(System.IAsyncResult result) {
            base.Channel.EndSaveAlbum(result);
        }
        
        private System.IAsyncResult OnBeginSaveAlbum(object[] inValues, System.AsyncCallback callback, object asyncState) {
            LiteApp.MySpace.Services.Photo.Album album = ((LiteApp.MySpace.Services.Photo.Album)(inValues[0]));
            return ((LiteApp.MySpace.Services.Photo.PhotoService)(this)).BeginSaveAlbum(album, callback, asyncState);
        }
        
        private object[] OnEndSaveAlbum(System.IAsyncResult result) {
            ((LiteApp.MySpace.Services.Photo.PhotoService)(this)).EndSaveAlbum(result);
            return null;
        }
        
        private void OnSaveAlbumCompleted(object state) {
            if ((this.SaveAlbumCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SaveAlbumCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SaveAlbumAsync(LiteApp.MySpace.Services.Photo.Album album) {
            this.SaveAlbumAsync(album, null);
        }
        
        public void SaveAlbumAsync(LiteApp.MySpace.Services.Photo.Album album, object userState) {
            if ((this.onBeginSaveAlbumDelegate == null)) {
                this.onBeginSaveAlbumDelegate = new BeginOperationDelegate(this.OnBeginSaveAlbum);
            }
            if ((this.onEndSaveAlbumDelegate == null)) {
                this.onEndSaveAlbumDelegate = new EndOperationDelegate(this.OnEndSaveAlbum);
            }
            if ((this.onSaveAlbumCompletedDelegate == null)) {
                this.onSaveAlbumCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSaveAlbumCompleted);
            }
            base.InvokeAsync(this.onBeginSaveAlbumDelegate, new object[] {
                        album}, this.onEndSaveAlbumDelegate, this.onSaveAlbumCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override LiteApp.MySpace.Services.Photo.PhotoService CreateChannel() {
            return new PhotoServiceClientChannel(this);
        }
        
        private class PhotoServiceClientChannel : ChannelBase<LiteApp.MySpace.Services.Photo.PhotoService>, LiteApp.MySpace.Services.Photo.PhotoService {
            
            public PhotoServiceClientChannel(System.ServiceModel.ClientBase<LiteApp.MySpace.Services.Photo.PhotoService> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginGetAllAlbums(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetAllAlbums", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.Generic.List<LiteApp.MySpace.Services.Photo.Album> EndGetAllAlbums(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.Generic.List<LiteApp.MySpace.Services.Photo.Album> _result = ((System.Collections.Generic.List<LiteApp.MySpace.Services.Photo.Album>)(base.EndInvoke("GetAllAlbums", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginSaveAlbum(LiteApp.MySpace.Services.Photo.Album album, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = album;
                System.IAsyncResult _result = base.BeginInvoke("SaveAlbum", _args, callback, asyncState);
                return _result;
            }
            
            public void EndSaveAlbum(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("SaveAlbum", _args, result);
            }
        }
    }
}
