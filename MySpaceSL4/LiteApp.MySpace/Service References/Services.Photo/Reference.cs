//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.296
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.ServiceReference, version 4.0.50826.0
// 
namespace LiteApp.MySpace.Services.Photo {
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ServerFault", Namespace="http://schemas.datacontract.org/2004/07/LiteApp.MySpace.Web.ErrorHandling")]
    public partial class ServerFault : object, System.ComponentModel.INotifyPropertyChanged {
        
        private LiteApp.MySpace.Services.Photo.ServerFaultCode FaultCodeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public LiteApp.MySpace.Services.Photo.ServerFaultCode FaultCode {
            get {
                return this.FaultCodeField;
            }
            set {
                if ((this.FaultCodeField.Equals(value) != true)) {
                    this.FaultCodeField = value;
                    this.RaisePropertyChanged("FaultCode");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ServerFaultCode", Namespace="http://schemas.datacontract.org/2004/07/LiteApp.MySpace.Web.ErrorHandling")]
    public enum ServerFaultCode : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Generic = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NotAuthroized = 1,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="", ConfigurationName="Services.Photo.PhotoService")]
    public interface PhotoService {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:PhotoService/GetPagedAlbums", ReplyAction="urn:PhotoService/GetPagedAlbumsResponse")]
        System.IAsyncResult BeginGetPagedAlbums(int pageIndex, int pageSize, System.AsyncCallback callback, object asyncState);
        
        LiteApp.MySpace.Entities.PagedResult<LiteApp.MySpace.Entities.Album> EndGetPagedAlbums(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:PhotoService/CreateAlbum", ReplyAction="urn:PhotoService/CreateAlbumResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(LiteApp.MySpace.Services.Photo.ServerFault), Action="urn:PhotoService/CreateAlbumServerFaultFault", Name="ServerFault", Namespace="http://schemas.datacontract.org/2004/07/LiteApp.MySpace.Web.ErrorHandling")]
        System.IAsyncResult BeginCreateAlbum(LiteApp.MySpace.Entities.Album album, System.AsyncCallback callback, object asyncState);
        
        void EndCreateAlbum(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:PhotoService/UpdateAlbum", ReplyAction="urn:PhotoService/UpdateAlbumResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(LiteApp.MySpace.Services.Photo.ServerFault), Action="urn:PhotoService/UpdateAlbumServerFaultFault", Name="ServerFault", Namespace="http://schemas.datacontract.org/2004/07/LiteApp.MySpace.Web.ErrorHandling")]
        System.IAsyncResult BeginUpdateAlbum(string name, string description, string albumId, System.AsyncCallback callback, object asyncState);
        
        void EndUpdateAlbum(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:PhotoService/DeleteAlbum", ReplyAction="urn:PhotoService/DeleteAlbumResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(LiteApp.MySpace.Services.Photo.ServerFault), Action="urn:PhotoService/DeleteAlbumServerFaultFault", Name="ServerFault", Namespace="http://schemas.datacontract.org/2004/07/LiteApp.MySpace.Web.ErrorHandling")]
        System.IAsyncResult BeginDeleteAlbum(string albumId, System.AsyncCallback callback, object asyncState);
        
        void EndDeleteAlbum(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:PhotoService/GetPagedPhotos", ReplyAction="urn:PhotoService/GetPagedPhotosResponse")]
        System.IAsyncResult BeginGetPagedPhotos(int pageIndex, int pageSize, string albumId, System.AsyncCallback callback, object asyncState);
        
        LiteApp.MySpace.Entities.PagedResult<LiteApp.MySpace.Entities.Photo> EndGetPagedPhotos(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:PhotoService/DeletePhotos", ReplyAction="urn:PhotoService/DeletePhotosResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(LiteApp.MySpace.Services.Photo.ServerFault), Action="urn:PhotoService/DeletePhotosServerFaultFault", Name="ServerFault", Namespace="http://schemas.datacontract.org/2004/07/LiteApp.MySpace.Web.ErrorHandling")]
        System.IAsyncResult BeginDeletePhotos(System.Collections.Generic.List<LiteApp.MySpace.Entities.DeletePhotoParameters> photos, string albumId, System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<string> EndDeletePhotos(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:PhotoService/UpdateDescription", ReplyAction="urn:PhotoService/UpdateDescriptionResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(LiteApp.MySpace.Services.Photo.ServerFault), Action="urn:PhotoService/UpdateDescriptionServerFaultFault", Name="ServerFault", Namespace="http://schemas.datacontract.org/2004/07/LiteApp.MySpace.Web.ErrorHandling")]
        System.IAsyncResult BeginUpdateDescription(string description, string photoId, System.AsyncCallback callback, object asyncState);
        
        void EndUpdateDescription(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:PhotoService/GetComments", ReplyAction="urn:PhotoService/GetCommentsResponse")]
        System.IAsyncResult BeginGetComments(string photoId, System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<LiteApp.MySpace.Entities.PhotoComment> EndGetComments(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:PhotoService/CreateComment", ReplyAction="urn:PhotoService/CreateCommentResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(LiteApp.MySpace.Services.Photo.ServerFault), Action="urn:PhotoService/CreateCommentServerFaultFault", Name="ServerFault", Namespace="http://schemas.datacontract.org/2004/07/LiteApp.MySpace.Web.ErrorHandling")]
        System.IAsyncResult BeginCreateComment(LiteApp.MySpace.Entities.PhotoComment comment, System.AsyncCallback callback, object asyncState);
        
        LiteApp.MySpace.Entities.PhotoComment EndCreateComment(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:PhotoService/DeleteComment", ReplyAction="urn:PhotoService/DeleteCommentResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(LiteApp.MySpace.Services.Photo.ServerFault), Action="urn:PhotoService/DeleteCommentServerFaultFault", Name="ServerFault", Namespace="http://schemas.datacontract.org/2004/07/LiteApp.MySpace.Web.ErrorHandling")]
        System.IAsyncResult BeginDeleteComment(string commentId, System.AsyncCallback callback, object asyncState);
        
        void EndDeleteComment(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface PhotoServiceChannel : LiteApp.MySpace.Services.Photo.PhotoService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetPagedAlbumsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetPagedAlbumsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public LiteApp.MySpace.Entities.PagedResult<LiteApp.MySpace.Entities.Album> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((LiteApp.MySpace.Entities.PagedResult<LiteApp.MySpace.Entities.Album>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetPagedPhotosCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetPagedPhotosCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public LiteApp.MySpace.Entities.PagedResult<LiteApp.MySpace.Entities.Photo> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((LiteApp.MySpace.Entities.PagedResult<LiteApp.MySpace.Entities.Photo>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DeletePhotosCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public DeletePhotosCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<string> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<string>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetCommentsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetCommentsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<LiteApp.MySpace.Entities.PhotoComment> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<LiteApp.MySpace.Entities.PhotoComment>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CreateCommentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CreateCommentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public LiteApp.MySpace.Entities.PhotoComment Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((LiteApp.MySpace.Entities.PhotoComment)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PhotoServiceClient : System.ServiceModel.ClientBase<LiteApp.MySpace.Services.Photo.PhotoService>, LiteApp.MySpace.Services.Photo.PhotoService {
        
        private BeginOperationDelegate onBeginGetPagedAlbumsDelegate;
        
        private EndOperationDelegate onEndGetPagedAlbumsDelegate;
        
        private System.Threading.SendOrPostCallback onGetPagedAlbumsCompletedDelegate;
        
        private BeginOperationDelegate onBeginCreateAlbumDelegate;
        
        private EndOperationDelegate onEndCreateAlbumDelegate;
        
        private System.Threading.SendOrPostCallback onCreateAlbumCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdateAlbumDelegate;
        
        private EndOperationDelegate onEndUpdateAlbumDelegate;
        
        private System.Threading.SendOrPostCallback onUpdateAlbumCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeleteAlbumDelegate;
        
        private EndOperationDelegate onEndDeleteAlbumDelegate;
        
        private System.Threading.SendOrPostCallback onDeleteAlbumCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetPagedPhotosDelegate;
        
        private EndOperationDelegate onEndGetPagedPhotosDelegate;
        
        private System.Threading.SendOrPostCallback onGetPagedPhotosCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeletePhotosDelegate;
        
        private EndOperationDelegate onEndDeletePhotosDelegate;
        
        private System.Threading.SendOrPostCallback onDeletePhotosCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdateDescriptionDelegate;
        
        private EndOperationDelegate onEndUpdateDescriptionDelegate;
        
        private System.Threading.SendOrPostCallback onUpdateDescriptionCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetCommentsDelegate;
        
        private EndOperationDelegate onEndGetCommentsDelegate;
        
        private System.Threading.SendOrPostCallback onGetCommentsCompletedDelegate;
        
        private BeginOperationDelegate onBeginCreateCommentDelegate;
        
        private EndOperationDelegate onEndCreateCommentDelegate;
        
        private System.Threading.SendOrPostCallback onCreateCommentCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeleteCommentDelegate;
        
        private EndOperationDelegate onEndDeleteCommentDelegate;
        
        private System.Threading.SendOrPostCallback onDeleteCommentCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public PhotoServiceClient() {
        }
        
        public PhotoServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public PhotoServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PhotoServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PhotoServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                            "ookieContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<GetPagedAlbumsCompletedEventArgs> GetPagedAlbumsCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CreateAlbumCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> UpdateAlbumCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> DeleteAlbumCompleted;
        
        public event System.EventHandler<GetPagedPhotosCompletedEventArgs> GetPagedPhotosCompleted;
        
        public event System.EventHandler<DeletePhotosCompletedEventArgs> DeletePhotosCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> UpdateDescriptionCompleted;
        
        public event System.EventHandler<GetCommentsCompletedEventArgs> GetCommentsCompleted;
        
        public event System.EventHandler<CreateCommentCompletedEventArgs> CreateCommentCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> DeleteCommentCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult LiteApp.MySpace.Services.Photo.PhotoService.BeginGetPagedAlbums(int pageIndex, int pageSize, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetPagedAlbums(pageIndex, pageSize, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        LiteApp.MySpace.Entities.PagedResult<LiteApp.MySpace.Entities.Album> LiteApp.MySpace.Services.Photo.PhotoService.EndGetPagedAlbums(System.IAsyncResult result) {
            return base.Channel.EndGetPagedAlbums(result);
        }
        
        private System.IAsyncResult OnBeginGetPagedAlbums(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int pageIndex = ((int)(inValues[0]));
            int pageSize = ((int)(inValues[1]));
            return ((LiteApp.MySpace.Services.Photo.PhotoService)(this)).BeginGetPagedAlbums(pageIndex, pageSize, callback, asyncState);
        }
        
        private object[] OnEndGetPagedAlbums(System.IAsyncResult result) {
            LiteApp.MySpace.Entities.PagedResult<LiteApp.MySpace.Entities.Album> retVal = ((LiteApp.MySpace.Services.Photo.PhotoService)(this)).EndGetPagedAlbums(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetPagedAlbumsCompleted(object state) {
            if ((this.GetPagedAlbumsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetPagedAlbumsCompleted(this, new GetPagedAlbumsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetPagedAlbumsAsync(int pageIndex, int pageSize) {
            this.GetPagedAlbumsAsync(pageIndex, pageSize, null);
        }
        
        public void GetPagedAlbumsAsync(int pageIndex, int pageSize, object userState) {
            if ((this.onBeginGetPagedAlbumsDelegate == null)) {
                this.onBeginGetPagedAlbumsDelegate = new BeginOperationDelegate(this.OnBeginGetPagedAlbums);
            }
            if ((this.onEndGetPagedAlbumsDelegate == null)) {
                this.onEndGetPagedAlbumsDelegate = new EndOperationDelegate(this.OnEndGetPagedAlbums);
            }
            if ((this.onGetPagedAlbumsCompletedDelegate == null)) {
                this.onGetPagedAlbumsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetPagedAlbumsCompleted);
            }
            base.InvokeAsync(this.onBeginGetPagedAlbumsDelegate, new object[] {
                        pageIndex,
                        pageSize}, this.onEndGetPagedAlbumsDelegate, this.onGetPagedAlbumsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult LiteApp.MySpace.Services.Photo.PhotoService.BeginCreateAlbum(LiteApp.MySpace.Entities.Album album, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCreateAlbum(album, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void LiteApp.MySpace.Services.Photo.PhotoService.EndCreateAlbum(System.IAsyncResult result) {
            base.Channel.EndCreateAlbum(result);
        }
        
        private System.IAsyncResult OnBeginCreateAlbum(object[] inValues, System.AsyncCallback callback, object asyncState) {
            LiteApp.MySpace.Entities.Album album = ((LiteApp.MySpace.Entities.Album)(inValues[0]));
            return ((LiteApp.MySpace.Services.Photo.PhotoService)(this)).BeginCreateAlbum(album, callback, asyncState);
        }
        
        private object[] OnEndCreateAlbum(System.IAsyncResult result) {
            ((LiteApp.MySpace.Services.Photo.PhotoService)(this)).EndCreateAlbum(result);
            return null;
        }
        
        private void OnCreateAlbumCompleted(object state) {
            if ((this.CreateAlbumCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CreateAlbumCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CreateAlbumAsync(LiteApp.MySpace.Entities.Album album) {
            this.CreateAlbumAsync(album, null);
        }
        
        public void CreateAlbumAsync(LiteApp.MySpace.Entities.Album album, object userState) {
            if ((this.onBeginCreateAlbumDelegate == null)) {
                this.onBeginCreateAlbumDelegate = new BeginOperationDelegate(this.OnBeginCreateAlbum);
            }
            if ((this.onEndCreateAlbumDelegate == null)) {
                this.onEndCreateAlbumDelegate = new EndOperationDelegate(this.OnEndCreateAlbum);
            }
            if ((this.onCreateAlbumCompletedDelegate == null)) {
                this.onCreateAlbumCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCreateAlbumCompleted);
            }
            base.InvokeAsync(this.onBeginCreateAlbumDelegate, new object[] {
                        album}, this.onEndCreateAlbumDelegate, this.onCreateAlbumCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult LiteApp.MySpace.Services.Photo.PhotoService.BeginUpdateAlbum(string name, string description, string albumId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdateAlbum(name, description, albumId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void LiteApp.MySpace.Services.Photo.PhotoService.EndUpdateAlbum(System.IAsyncResult result) {
            base.Channel.EndUpdateAlbum(result);
        }
        
        private System.IAsyncResult OnBeginUpdateAlbum(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string name = ((string)(inValues[0]));
            string description = ((string)(inValues[1]));
            string albumId = ((string)(inValues[2]));
            return ((LiteApp.MySpace.Services.Photo.PhotoService)(this)).BeginUpdateAlbum(name, description, albumId, callback, asyncState);
        }
        
        private object[] OnEndUpdateAlbum(System.IAsyncResult result) {
            ((LiteApp.MySpace.Services.Photo.PhotoService)(this)).EndUpdateAlbum(result);
            return null;
        }
        
        private void OnUpdateAlbumCompleted(object state) {
            if ((this.UpdateAlbumCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateAlbumCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateAlbumAsync(string name, string description, string albumId) {
            this.UpdateAlbumAsync(name, description, albumId, null);
        }
        
        public void UpdateAlbumAsync(string name, string description, string albumId, object userState) {
            if ((this.onBeginUpdateAlbumDelegate == null)) {
                this.onBeginUpdateAlbumDelegate = new BeginOperationDelegate(this.OnBeginUpdateAlbum);
            }
            if ((this.onEndUpdateAlbumDelegate == null)) {
                this.onEndUpdateAlbumDelegate = new EndOperationDelegate(this.OnEndUpdateAlbum);
            }
            if ((this.onUpdateAlbumCompletedDelegate == null)) {
                this.onUpdateAlbumCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateAlbumCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateAlbumDelegate, new object[] {
                        name,
                        description,
                        albumId}, this.onEndUpdateAlbumDelegate, this.onUpdateAlbumCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult LiteApp.MySpace.Services.Photo.PhotoService.BeginDeleteAlbum(string albumId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeleteAlbum(albumId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void LiteApp.MySpace.Services.Photo.PhotoService.EndDeleteAlbum(System.IAsyncResult result) {
            base.Channel.EndDeleteAlbum(result);
        }
        
        private System.IAsyncResult OnBeginDeleteAlbum(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string albumId = ((string)(inValues[0]));
            return ((LiteApp.MySpace.Services.Photo.PhotoService)(this)).BeginDeleteAlbum(albumId, callback, asyncState);
        }
        
        private object[] OnEndDeleteAlbum(System.IAsyncResult result) {
            ((LiteApp.MySpace.Services.Photo.PhotoService)(this)).EndDeleteAlbum(result);
            return null;
        }
        
        private void OnDeleteAlbumCompleted(object state) {
            if ((this.DeleteAlbumCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteAlbumCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeleteAlbumAsync(string albumId) {
            this.DeleteAlbumAsync(albumId, null);
        }
        
        public void DeleteAlbumAsync(string albumId, object userState) {
            if ((this.onBeginDeleteAlbumDelegate == null)) {
                this.onBeginDeleteAlbumDelegate = new BeginOperationDelegate(this.OnBeginDeleteAlbum);
            }
            if ((this.onEndDeleteAlbumDelegate == null)) {
                this.onEndDeleteAlbumDelegate = new EndOperationDelegate(this.OnEndDeleteAlbum);
            }
            if ((this.onDeleteAlbumCompletedDelegate == null)) {
                this.onDeleteAlbumCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteAlbumCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteAlbumDelegate, new object[] {
                        albumId}, this.onEndDeleteAlbumDelegate, this.onDeleteAlbumCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult LiteApp.MySpace.Services.Photo.PhotoService.BeginGetPagedPhotos(int pageIndex, int pageSize, string albumId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetPagedPhotos(pageIndex, pageSize, albumId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        LiteApp.MySpace.Entities.PagedResult<LiteApp.MySpace.Entities.Photo> LiteApp.MySpace.Services.Photo.PhotoService.EndGetPagedPhotos(System.IAsyncResult result) {
            return base.Channel.EndGetPagedPhotos(result);
        }
        
        private System.IAsyncResult OnBeginGetPagedPhotos(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int pageIndex = ((int)(inValues[0]));
            int pageSize = ((int)(inValues[1]));
            string albumId = ((string)(inValues[2]));
            return ((LiteApp.MySpace.Services.Photo.PhotoService)(this)).BeginGetPagedPhotos(pageIndex, pageSize, albumId, callback, asyncState);
        }
        
        private object[] OnEndGetPagedPhotos(System.IAsyncResult result) {
            LiteApp.MySpace.Entities.PagedResult<LiteApp.MySpace.Entities.Photo> retVal = ((LiteApp.MySpace.Services.Photo.PhotoService)(this)).EndGetPagedPhotos(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetPagedPhotosCompleted(object state) {
            if ((this.GetPagedPhotosCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetPagedPhotosCompleted(this, new GetPagedPhotosCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetPagedPhotosAsync(int pageIndex, int pageSize, string albumId) {
            this.GetPagedPhotosAsync(pageIndex, pageSize, albumId, null);
        }
        
        public void GetPagedPhotosAsync(int pageIndex, int pageSize, string albumId, object userState) {
            if ((this.onBeginGetPagedPhotosDelegate == null)) {
                this.onBeginGetPagedPhotosDelegate = new BeginOperationDelegate(this.OnBeginGetPagedPhotos);
            }
            if ((this.onEndGetPagedPhotosDelegate == null)) {
                this.onEndGetPagedPhotosDelegate = new EndOperationDelegate(this.OnEndGetPagedPhotos);
            }
            if ((this.onGetPagedPhotosCompletedDelegate == null)) {
                this.onGetPagedPhotosCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetPagedPhotosCompleted);
            }
            base.InvokeAsync(this.onBeginGetPagedPhotosDelegate, new object[] {
                        pageIndex,
                        pageSize,
                        albumId}, this.onEndGetPagedPhotosDelegate, this.onGetPagedPhotosCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult LiteApp.MySpace.Services.Photo.PhotoService.BeginDeletePhotos(System.Collections.Generic.List<LiteApp.MySpace.Entities.DeletePhotoParameters> photos, string albumId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeletePhotos(photos, albumId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.Generic.List<string> LiteApp.MySpace.Services.Photo.PhotoService.EndDeletePhotos(System.IAsyncResult result) {
            return base.Channel.EndDeletePhotos(result);
        }
        
        private System.IAsyncResult OnBeginDeletePhotos(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Collections.Generic.List<LiteApp.MySpace.Entities.DeletePhotoParameters> photos = ((System.Collections.Generic.List<LiteApp.MySpace.Entities.DeletePhotoParameters>)(inValues[0]));
            string albumId = ((string)(inValues[1]));
            return ((LiteApp.MySpace.Services.Photo.PhotoService)(this)).BeginDeletePhotos(photos, albumId, callback, asyncState);
        }
        
        private object[] OnEndDeletePhotos(System.IAsyncResult result) {
            System.Collections.Generic.List<string> retVal = ((LiteApp.MySpace.Services.Photo.PhotoService)(this)).EndDeletePhotos(result);
            return new object[] {
                    retVal};
        }
        
        private void OnDeletePhotosCompleted(object state) {
            if ((this.DeletePhotosCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeletePhotosCompleted(this, new DeletePhotosCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeletePhotosAsync(System.Collections.Generic.List<LiteApp.MySpace.Entities.DeletePhotoParameters> photos, string albumId) {
            this.DeletePhotosAsync(photos, albumId, null);
        }
        
        public void DeletePhotosAsync(System.Collections.Generic.List<LiteApp.MySpace.Entities.DeletePhotoParameters> photos, string albumId, object userState) {
            if ((this.onBeginDeletePhotosDelegate == null)) {
                this.onBeginDeletePhotosDelegate = new BeginOperationDelegate(this.OnBeginDeletePhotos);
            }
            if ((this.onEndDeletePhotosDelegate == null)) {
                this.onEndDeletePhotosDelegate = new EndOperationDelegate(this.OnEndDeletePhotos);
            }
            if ((this.onDeletePhotosCompletedDelegate == null)) {
                this.onDeletePhotosCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeletePhotosCompleted);
            }
            base.InvokeAsync(this.onBeginDeletePhotosDelegate, new object[] {
                        photos,
                        albumId}, this.onEndDeletePhotosDelegate, this.onDeletePhotosCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult LiteApp.MySpace.Services.Photo.PhotoService.BeginUpdateDescription(string description, string photoId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdateDescription(description, photoId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void LiteApp.MySpace.Services.Photo.PhotoService.EndUpdateDescription(System.IAsyncResult result) {
            base.Channel.EndUpdateDescription(result);
        }
        
        private System.IAsyncResult OnBeginUpdateDescription(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string description = ((string)(inValues[0]));
            string photoId = ((string)(inValues[1]));
            return ((LiteApp.MySpace.Services.Photo.PhotoService)(this)).BeginUpdateDescription(description, photoId, callback, asyncState);
        }
        
        private object[] OnEndUpdateDescription(System.IAsyncResult result) {
            ((LiteApp.MySpace.Services.Photo.PhotoService)(this)).EndUpdateDescription(result);
            return null;
        }
        
        private void OnUpdateDescriptionCompleted(object state) {
            if ((this.UpdateDescriptionCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateDescriptionCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateDescriptionAsync(string description, string photoId) {
            this.UpdateDescriptionAsync(description, photoId, null);
        }
        
        public void UpdateDescriptionAsync(string description, string photoId, object userState) {
            if ((this.onBeginUpdateDescriptionDelegate == null)) {
                this.onBeginUpdateDescriptionDelegate = new BeginOperationDelegate(this.OnBeginUpdateDescription);
            }
            if ((this.onEndUpdateDescriptionDelegate == null)) {
                this.onEndUpdateDescriptionDelegate = new EndOperationDelegate(this.OnEndUpdateDescription);
            }
            if ((this.onUpdateDescriptionCompletedDelegate == null)) {
                this.onUpdateDescriptionCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateDescriptionCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateDescriptionDelegate, new object[] {
                        description,
                        photoId}, this.onEndUpdateDescriptionDelegate, this.onUpdateDescriptionCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult LiteApp.MySpace.Services.Photo.PhotoService.BeginGetComments(string photoId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetComments(photoId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.Generic.List<LiteApp.MySpace.Entities.PhotoComment> LiteApp.MySpace.Services.Photo.PhotoService.EndGetComments(System.IAsyncResult result) {
            return base.Channel.EndGetComments(result);
        }
        
        private System.IAsyncResult OnBeginGetComments(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string photoId = ((string)(inValues[0]));
            return ((LiteApp.MySpace.Services.Photo.PhotoService)(this)).BeginGetComments(photoId, callback, asyncState);
        }
        
        private object[] OnEndGetComments(System.IAsyncResult result) {
            System.Collections.Generic.List<LiteApp.MySpace.Entities.PhotoComment> retVal = ((LiteApp.MySpace.Services.Photo.PhotoService)(this)).EndGetComments(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetCommentsCompleted(object state) {
            if ((this.GetCommentsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetCommentsCompleted(this, new GetCommentsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetCommentsAsync(string photoId) {
            this.GetCommentsAsync(photoId, null);
        }
        
        public void GetCommentsAsync(string photoId, object userState) {
            if ((this.onBeginGetCommentsDelegate == null)) {
                this.onBeginGetCommentsDelegate = new BeginOperationDelegate(this.OnBeginGetComments);
            }
            if ((this.onEndGetCommentsDelegate == null)) {
                this.onEndGetCommentsDelegate = new EndOperationDelegate(this.OnEndGetComments);
            }
            if ((this.onGetCommentsCompletedDelegate == null)) {
                this.onGetCommentsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetCommentsCompleted);
            }
            base.InvokeAsync(this.onBeginGetCommentsDelegate, new object[] {
                        photoId}, this.onEndGetCommentsDelegate, this.onGetCommentsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult LiteApp.MySpace.Services.Photo.PhotoService.BeginCreateComment(LiteApp.MySpace.Entities.PhotoComment comment, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCreateComment(comment, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        LiteApp.MySpace.Entities.PhotoComment LiteApp.MySpace.Services.Photo.PhotoService.EndCreateComment(System.IAsyncResult result) {
            return base.Channel.EndCreateComment(result);
        }
        
        private System.IAsyncResult OnBeginCreateComment(object[] inValues, System.AsyncCallback callback, object asyncState) {
            LiteApp.MySpace.Entities.PhotoComment comment = ((LiteApp.MySpace.Entities.PhotoComment)(inValues[0]));
            return ((LiteApp.MySpace.Services.Photo.PhotoService)(this)).BeginCreateComment(comment, callback, asyncState);
        }
        
        private object[] OnEndCreateComment(System.IAsyncResult result) {
            LiteApp.MySpace.Entities.PhotoComment retVal = ((LiteApp.MySpace.Services.Photo.PhotoService)(this)).EndCreateComment(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCreateCommentCompleted(object state) {
            if ((this.CreateCommentCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CreateCommentCompleted(this, new CreateCommentCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CreateCommentAsync(LiteApp.MySpace.Entities.PhotoComment comment) {
            this.CreateCommentAsync(comment, null);
        }
        
        public void CreateCommentAsync(LiteApp.MySpace.Entities.PhotoComment comment, object userState) {
            if ((this.onBeginCreateCommentDelegate == null)) {
                this.onBeginCreateCommentDelegate = new BeginOperationDelegate(this.OnBeginCreateComment);
            }
            if ((this.onEndCreateCommentDelegate == null)) {
                this.onEndCreateCommentDelegate = new EndOperationDelegate(this.OnEndCreateComment);
            }
            if ((this.onCreateCommentCompletedDelegate == null)) {
                this.onCreateCommentCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCreateCommentCompleted);
            }
            base.InvokeAsync(this.onBeginCreateCommentDelegate, new object[] {
                        comment}, this.onEndCreateCommentDelegate, this.onCreateCommentCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult LiteApp.MySpace.Services.Photo.PhotoService.BeginDeleteComment(string commentId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeleteComment(commentId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void LiteApp.MySpace.Services.Photo.PhotoService.EndDeleteComment(System.IAsyncResult result) {
            base.Channel.EndDeleteComment(result);
        }
        
        private System.IAsyncResult OnBeginDeleteComment(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string commentId = ((string)(inValues[0]));
            return ((LiteApp.MySpace.Services.Photo.PhotoService)(this)).BeginDeleteComment(commentId, callback, asyncState);
        }
        
        private object[] OnEndDeleteComment(System.IAsyncResult result) {
            ((LiteApp.MySpace.Services.Photo.PhotoService)(this)).EndDeleteComment(result);
            return null;
        }
        
        private void OnDeleteCommentCompleted(object state) {
            if ((this.DeleteCommentCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteCommentCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeleteCommentAsync(string commentId) {
            this.DeleteCommentAsync(commentId, null);
        }
        
        public void DeleteCommentAsync(string commentId, object userState) {
            if ((this.onBeginDeleteCommentDelegate == null)) {
                this.onBeginDeleteCommentDelegate = new BeginOperationDelegate(this.OnBeginDeleteComment);
            }
            if ((this.onEndDeleteCommentDelegate == null)) {
                this.onEndDeleteCommentDelegate = new EndOperationDelegate(this.OnEndDeleteComment);
            }
            if ((this.onDeleteCommentCompletedDelegate == null)) {
                this.onDeleteCommentCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteCommentCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteCommentDelegate, new object[] {
                        commentId}, this.onEndDeleteCommentDelegate, this.onDeleteCommentCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override LiteApp.MySpace.Services.Photo.PhotoService CreateChannel() {
            return new PhotoServiceClientChannel(this);
        }
        
        private class PhotoServiceClientChannel : ChannelBase<LiteApp.MySpace.Services.Photo.PhotoService>, LiteApp.MySpace.Services.Photo.PhotoService {
            
            public PhotoServiceClientChannel(System.ServiceModel.ClientBase<LiteApp.MySpace.Services.Photo.PhotoService> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginGetPagedAlbums(int pageIndex, int pageSize, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = pageIndex;
                _args[1] = pageSize;
                System.IAsyncResult _result = base.BeginInvoke("GetPagedAlbums", _args, callback, asyncState);
                return _result;
            }
            
            public LiteApp.MySpace.Entities.PagedResult<LiteApp.MySpace.Entities.Album> EndGetPagedAlbums(System.IAsyncResult result) {
                object[] _args = new object[0];
                LiteApp.MySpace.Entities.PagedResult<LiteApp.MySpace.Entities.Album> _result = ((LiteApp.MySpace.Entities.PagedResult<LiteApp.MySpace.Entities.Album>)(base.EndInvoke("GetPagedAlbums", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginCreateAlbum(LiteApp.MySpace.Entities.Album album, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = album;
                System.IAsyncResult _result = base.BeginInvoke("CreateAlbum", _args, callback, asyncState);
                return _result;
            }
            
            public void EndCreateAlbum(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("CreateAlbum", _args, result);
            }
            
            public System.IAsyncResult BeginUpdateAlbum(string name, string description, string albumId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = name;
                _args[1] = description;
                _args[2] = albumId;
                System.IAsyncResult _result = base.BeginInvoke("UpdateAlbum", _args, callback, asyncState);
                return _result;
            }
            
            public void EndUpdateAlbum(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("UpdateAlbum", _args, result);
            }
            
            public System.IAsyncResult BeginDeleteAlbum(string albumId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = albumId;
                System.IAsyncResult _result = base.BeginInvoke("DeleteAlbum", _args, callback, asyncState);
                return _result;
            }
            
            public void EndDeleteAlbum(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("DeleteAlbum", _args, result);
            }
            
            public System.IAsyncResult BeginGetPagedPhotos(int pageIndex, int pageSize, string albumId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = pageIndex;
                _args[1] = pageSize;
                _args[2] = albumId;
                System.IAsyncResult _result = base.BeginInvoke("GetPagedPhotos", _args, callback, asyncState);
                return _result;
            }
            
            public LiteApp.MySpace.Entities.PagedResult<LiteApp.MySpace.Entities.Photo> EndGetPagedPhotos(System.IAsyncResult result) {
                object[] _args = new object[0];
                LiteApp.MySpace.Entities.PagedResult<LiteApp.MySpace.Entities.Photo> _result = ((LiteApp.MySpace.Entities.PagedResult<LiteApp.MySpace.Entities.Photo>)(base.EndInvoke("GetPagedPhotos", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginDeletePhotos(System.Collections.Generic.List<LiteApp.MySpace.Entities.DeletePhotoParameters> photos, string albumId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = photos;
                _args[1] = albumId;
                System.IAsyncResult _result = base.BeginInvoke("DeletePhotos", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.Generic.List<string> EndDeletePhotos(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.Generic.List<string> _result = ((System.Collections.Generic.List<string>)(base.EndInvoke("DeletePhotos", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginUpdateDescription(string description, string photoId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = description;
                _args[1] = photoId;
                System.IAsyncResult _result = base.BeginInvoke("UpdateDescription", _args, callback, asyncState);
                return _result;
            }
            
            public void EndUpdateDescription(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("UpdateDescription", _args, result);
            }
            
            public System.IAsyncResult BeginGetComments(string photoId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = photoId;
                System.IAsyncResult _result = base.BeginInvoke("GetComments", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.Generic.List<LiteApp.MySpace.Entities.PhotoComment> EndGetComments(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.Generic.List<LiteApp.MySpace.Entities.PhotoComment> _result = ((System.Collections.Generic.List<LiteApp.MySpace.Entities.PhotoComment>)(base.EndInvoke("GetComments", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginCreateComment(LiteApp.MySpace.Entities.PhotoComment comment, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = comment;
                System.IAsyncResult _result = base.BeginInvoke("CreateComment", _args, callback, asyncState);
                return _result;
            }
            
            public LiteApp.MySpace.Entities.PhotoComment EndCreateComment(System.IAsyncResult result) {
                object[] _args = new object[0];
                LiteApp.MySpace.Entities.PhotoComment _result = ((LiteApp.MySpace.Entities.PhotoComment)(base.EndInvoke("CreateComment", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginDeleteComment(string commentId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = commentId;
                System.IAsyncResult _result = base.BeginInvoke("DeleteComment", _args, callback, asyncState);
                return _result;
            }
            
            public void EndDeleteComment(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("DeleteComment", _args, result);
            }
        }
    }
}
